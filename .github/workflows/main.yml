name: Main Workflow

on:
  push:
    branches: [ dev, test, main ]
  pull_request:
    branches: [ test, main ]

jobs:
  quality-and-test:
    name: Quality Checks & Tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' || github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        id: install
        run: |
          if ! npm ci; then
            echo "npm ci failed, falling back to npm install"
            npm install
          fi

      - name: Code Quality Checks
        id: quality
        run: |
          npm run format
          npm run i18n:parse
      
      - name: Run Integration Tests
        id: tests
        run: |
          docker compose -f docker-compose.test.yaml up --detach --build
          sleep 30
          npm run test:integration
      
      - name: Auto Merge to Test
        if: github.ref == 'refs/heads/dev' && success()
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          git fetch origin test
          git checkout test
          git merge --no-ff dev -m "Auto-merge dev into test"
          git push origin test

  deploy-test:
    name: Deploy to Test
    runs-on: ubuntu-latest
    needs: quality-and-test
    if: github.ref == 'refs/heads/test'
    environment:
      name: test
      url: https://test.your-domain.com
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Deploy to Test
        run: |
          docker compose -f docker-compose.test.yaml pull
          docker compose -f docker-compose.test.yaml up -d

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://your-domain.com
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Deploy to Production
        run: |
          docker compose -f docker-compose.prod.yaml pull
          docker compose -f docker-compose.prod.yaml up -d
