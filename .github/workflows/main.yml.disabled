name: Main Workflow

on:
  push:
    branches: [ dev, test, main ]
  pull_request:
    branches: [ test, main ]

jobs:
  quality-and-test:
    name: Quality Checks & Tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' || github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: |
          npm ci || npm install

      - name: Code Quality Checks
        run: |
          npm run format
          npm run i18n:parse
          git diff --exit-code
      
      - name: Build Frontend
        run: npm run build
        
      - name: Run Frontend Tests
        run: npm run test:frontend
      
      - name: Run Integration Tests
        env:
          CYPRESS_BASE_URL: http://localhost:8080
          NODE_ENV: test
        run: |
          docker compose -f docker-compose.test.yaml up --detach --build
          sleep 30
          npx cypress run
      
      - name: Auto Merge to Test
        if: github.ref == 'refs/heads/dev' && success()
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          git fetch origin test
          git checkout test
          git merge --no-ff dev -m "Auto-merge dev into test"
          git push origin test

  deploy-test:
    name: Deploy to Test
    runs-on: ubuntu-latest
    needs: quality-and-test
    if: github.ref == 'refs/heads/test'
    environment:
      name: test
      url: https://test.your-domain.com
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and Push Test Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:test
      
      - name: Deploy to Test
        run: |
          docker compose -f docker-compose.test.yaml pull
          docker compose -f docker-compose.test.yaml up -d

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: https://your-domain.com
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and Push Production Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest
      
      - name: Deploy to Production
        run: |
          docker compose -f docker-compose.prod.yaml pull
          docker compose -f docker-compose.prod.yaml up -d
